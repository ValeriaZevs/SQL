create table if not exists Genre (
    genre_id serial primary key,
    name varchar(40) unique not null
);

create table if not exists Musician (
    musician_id serial primary key,
    name varchar(40) unique not null
);

create table if not exists Genre_Musician (
    genre_musician_id primary key,
    genre_id integer references Genre(genre_id),
    musician_id integer references Musician(musician_id),
    constant pk1 primary key (genre_id, musician_id)
);

create table if not exists Album (
    album_id serial primary key,
    name varchar(40) unique not null,
    year integer not null check(year > 0)
);

create table if not exists Album_Musician (
    album_musician_id primary key,
    album_id integer references Album(album_id),
    musician_id integer references Musician(musician_id),
    constant pk2 primary key (album_id, musician_id)
);

create table if not exists Track (
    track_id serial primary key,
    name varchar(40) not null,
    duration numeric not null check(duration > 0),
    album_id integer references Album(album_id) --may be null
);

create table if not exists List (
    list_id serial primary key,
    name varchar(40) not null,
    year integer not null check(year > 0)
);

create table if not exists List_Track (
    list_track_id primary key,
    track_id integer references Track(track_id),
    list_id integer references List(list_id),
    constant pk3 primary key (track_id, list_id)
);
